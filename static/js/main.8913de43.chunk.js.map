{"version":3,"sources":["components/modal/InputForm.js","components/modal/TitleInput.js","components/modal/DescriptionTaskInput.js","components/modal/ModalPage.js","components/main/ButtonGroup.js","components/main/TaskItem.js","components/main/KanbanDashboard.js","components/main/index.js","App.js","helpers/EmptyObject.js","index.js"],"names":["handleDelegateNameChange","fullname","prepend","inputs","noTag","name","value","first_name","onChange","e","target","getAttribute","type","last_name","titleInput","title","className","id","description","descriptionInputChange","label","outline","createList","useState","modalButtonClick","setModalButtonClick","taskTitle","setTaskTitle","taskDescription","setTaskDescription","delegateName","setDelegateName","createTask","setCreateTask","handleTaskTitleChange","stableDispatch","useCallback","useEffect","handleToggleModal","onClick","isOpen","toggle","TitleInput","DescriptionTaskInput","InputForm","attribute","color","task","board","moveTask","deleteTask","hideTask","size","disabled","aria-hidden","index","toggleModal","setToggleModal","DescriptionModal","handleToggleDescriptionModal","draggable","onDragStart","dataTransfer","setData","onDragOver","stopPropagation","onMouseOver","document","getElementById","querySelector","innerHTML","onMouseLeave","ButtonGroup","taskToDoList","taskInProgressList","taskReviewList","taskDoneList","showTask","dragTask","boardMessage","dropTask","preventDefault","task_id","getData","dragTaskOver","boardList","list","length","map","visibility","TaskItem","key","autoFocus","style","textAlign","onDrop","md","props","listProps","eventProps","ModalPage","KanbanDashboard","App","setToDoTaskList","setTaskInProgressList","setTaskReviewList","setTaskDoneList","note","setNote","handleShowTaskItem","visible","split","handleEventProps","obj","hasOwnProperty","call","isEmpty","uuid","concat","find","filter","board_name","task_name","taskObj","handleStateProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.8913de43.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MDBInputGroup, MDBInput } from \"mdbreact\";\r\nexport default ( { handleDelegateNameChange, fullname } ) => {\r\n\r\n    const handleFirstNameInputChange = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n    const handleLastNameInputChange  = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n\r\n    return (\r\n        <MDBInputGroup\r\n            prepend=\"Delegated to: \"\r\n            inputs={\r\n                <>\r\n                    <MDBInput noTag name=\"first\" value={fullname.first_name} onChange={handleFirstNameInputChange} type=\"text\" />\r\n                    <MDBInput noTag name=\"last\" value={fullname.last_name} onChange={handleLastNameInputChange} type=\"text\" />\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default ({ titleInput, title }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Task Title</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={ titleInput }\r\n                value={ title }\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { MDBInput } from 'mdbreact';\r\n\r\nexport default ( { description, descriptionInputChange }) => <MDBInput\r\n    value={description}\r\n    onChange={descriptionInputChange}\r\n    type=\"textarea\"\r\n    label=\"Task Description\"\r\n    outline\r\n/>","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter} from 'mdbreact';\r\nimport InputForm from './InputForm';\r\nimport TitleInput from \"./TitleInput\";\r\nimport DescriptionTaskInput from \"./DescriptionTaskInput\";\r\n\r\n\r\nexport default ({createList}) => {\r\n    const [modalButtonClick, setModalButtonClick] = useState(false);\r\n    const [taskTitle, setTaskTitle] = useState(\"\");\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [delegateName, setDelegateName] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\"\r\n    });\r\n    const [createTask, setCreateTask] = useState({});\r\n\r\n    const handleTaskTitleChange = e => setTaskTitle(e.target.value);\r\n    const handleTaskDescriptionChange = e => setTaskDescription(e.target.value);\r\n    const handleDelegateNameChange = (attribute, value) => {\r\n        if (attribute === \"first\") setDelegateName({...delegateName, first_name: value});\r\n        if (attribute === \"last\") setDelegateName({...delegateName, last_name: value});\r\n    }\r\n\r\n    const handleStoreTaskItem = () => {\r\n        setCreateTask({\r\n            ...createTask,\r\n            title: taskTitle,\r\n            description: taskDescription,\r\n            first_name: delegateName.first_name,\r\n            last_name: delegateName.last_name\r\n        });\r\n        setModalButtonClick(!modalButtonClick);\r\n    };\r\n\r\n    const stableDispatch = useCallback(createList, []);\r\n    useEffect(() => {\r\n        stableDispatch(createTask);\r\n    }, [stableDispatch, createTask]);\r\n\r\n\r\n    const handleToggleModal = () => {\r\n        setTaskTitle('Write Title Here...');\r\n        setTaskDescription('');\r\n        setDelegateName({\r\n                first_name: \"\",\r\n                last_name: \"\"\r\n            }\r\n        );\r\n        setModalButtonClick(!modalButtonClick);\r\n    }\r\n\r\n    return (\r\n        <MDBContainer className=''>\r\n            <div className='start-modal-button-wrapper row align-items-center justify-content-center'>\r\n                <MDBBtn className='start-modal-button' onClick={handleToggleModal}>CREATE TASK</MDBBtn>\r\n            </div>\r\n            <MDBModal isOpen={modalButtonClick} toggle={handleToggleModal}>\r\n                <MDBModalHeader toggle={handleToggleModal}>Task Form</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <TitleInput id='titleInput' titleInput={handleTaskTitleChange} title={taskTitle}\r\n                                onChange={handleTaskTitleChange}/>\r\n                    <DescriptionTaskInput\r\n                        id='textArea'\r\n                        description={taskDescription}\r\n                        descriptionInputChange={handleTaskDescriptionChange}\r\n                    />\r\n                    <InputForm fullname={delegateName} handleDelegateNameChange={handleDelegateNameChange}/>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn className='row' color=\"secondary\" onClick={handleToggleModal}>Close</MDBBtn>\r\n                    <MDBBtn className='row' color=\"primary\" onClick={handleStoreTaskItem}>Create Task</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {MDBBtn, MDBBtnGroup} from \"mdbreact\";\r\n\r\nexport default ({task: {board, id}, moveTask, deleteTask, hideTask}) => {\r\n    return (\r\n        <MDBBtnGroup size=\"sm\" className=\"mb-4\">\r\n            <MDBBtn\r\n                disabled={`left-${board}` === 'left-todo'}\r\n                className='task-button'\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    name={`left-${board}`}\r\n                    className=\"fa fa-angle-double-left\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={hideTask} className=\"hide fas fa-eye-slash\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={deleteTask} className=\"delete fas fa-trash-alt\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn\r\n                className='task-button'\r\n                disabled={`right-${board}` === 'right-done'}\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    name={`right-${board}`}\r\n                    className=\"fa fa-angle-double-right\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n        </MDBBtnGroup>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\r\n\r\n\r\nexport default ({task, index, moveTask, deleteTask, hideTask}) => {\r\n\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n\r\n    const dragTaskStart = e => {\r\n        const target = e.target;\r\n        e.dataTransfer.setData('task', target.id);\r\n    };\r\n\r\n    const DescriptionModal = () =>\r\n        <MDBContainer>\r\n            <MDBModal isOpen={toggleModal} toggle={handleToggleDescriptionModal} size=\"fluid\">\r\n                <MDBModalHeader toggle={handleToggleDescriptionModal}>{task.title}</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    {task.description}\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color=\"secondary\" onClick={handleToggleDescriptionModal}>Close</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n\r\n    const dragTaskOver = e => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleOnMouseOver = e => document.getElementById(e.target.id).querySelector(\".task-details\").innerHTML = 'Click Here...';\r\n    const handleOnMouseOff = e => document.getElementById(e.target.id).querySelector(\".task-details\").innerHTML = 'Details...';\r\n\r\n    const handleToggleDescriptionModal = () => setToggleModal(!toggleModal)\r\n\r\n    return (\r\n        <div\r\n            draggable='true'\r\n            name={task.board}\r\n            id={index}\r\n            onDragStart={dragTaskStart}\r\n            onDragOver={dragTaskOver}\r\n            className=\"d-flex flex-column task-card\"\r\n        >\r\n            <h6 className=\"task-title\">{task.title}</h6>\r\n            <span className=\"p-2 col-example text-left task-details\"\r\n                  id={index}\r\n                  onMouseOver={handleOnMouseOver}\r\n                  onMouseLeave={handleOnMouseOff}\r\n                  onClick={handleToggleDescriptionModal}\r\n            >\r\n                <i>Details...</i>\r\n            </span>\r\n            <DescriptionModal/>\r\n            <ButtonGroup moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} task={task}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nexport default ({ taskToDoList,\r\n                    taskInProgressList,\r\n                    taskReviewList,\r\n                    taskDoneList,\r\n                    moveTask,\r\n                    deleteTask,\r\n                    hideTask,\r\n                    showTask,\r\n                    dragTask,\r\n                    boardMessage\r\n                }) =>\r\n{\r\n\r\n    const dropTask = e => {\r\n        e.preventDefault();\r\n        const task_id = e.dataTransfer.getData('task');\r\n        const task = document.getElementById(task_id);\r\n        dragTask(e.target.getAttribute('name'), task.getAttribute('name'), task_id);\r\n    };\r\n\r\n\r\n    const dragTaskOver = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n\r\n    const boardList = list => list.length\r\n        ?   list.map((task, id) => task.visibility\r\n            ?   <TaskItem moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} key={id} index={task.id} task={task}/>\r\n            :   <p className='show' key={task.id}>Hidden Task... <span id={task.id} name={task.board} autoFocus onClick={showTask} className='show'>SHOW</span></p>\r\n        )\r\n        :   <p style={{ color: 'white', textAlign: 'center' }}><i>{boardMessage}</i></p>;\r\n\r\n    return (\r\n        <MDBContainer className=\"dashboard\">\r\n            <MDBRow className=\"kanban-row\">\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='todo'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">To-Do: ({taskToDoList.length})</h3>\r\n                    {boardList(taskToDoList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='in-progress'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">In-Progress: ({taskInProgressList.length})</h3>\r\n                    {boardList(taskInProgressList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='review'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">To-Review: ({taskReviewList.length})</h3>\r\n                    {boardList(taskReviewList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='done'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">Done: ({taskDoneList.length})</h3>\r\n                    {boardList(taskDoneList)}\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n}","import React from 'react';\r\nimport ModalPage from '../modal/ModalPage';\r\nimport KanbanDashboard from \"./KanbanDashboard\";\r\n\r\nexport default props => {\r\n    const listProps = {\r\n        taskToDoList: props.taskToDoList,\r\n        taskInProgressList: props.taskInProgressList,\r\n        taskReviewList: props.taskReviewList,\r\n        taskDoneList: props.taskDoneList\r\n    };\r\n    const eventProps = {\r\n        moveTask: props.moveTask,\r\n        deleteTask: props.deleteTask,\r\n        hideTask: props.hideTask,\r\n        showTask: props.showTask,\r\n        dragTask: props.dragTask\r\n    };\r\n    return (\r\n        <div>\r\n            <ModalPage createList={props.createList} />\r\n            <KanbanDashboard\r\n                boardMessage={props.boardMessage}\r\n                {...listProps}\r\n                {...eventProps}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Main from './components/main';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport isEmpty from './helpers/EmptyObject';\n\n\nfunction App() {\n\n    const [ taskToDoList, setToDoTaskList ] = useState([]);\n    const [ taskInProgressList, setTaskInProgressList ] = useState([]);\n    const [ taskReviewList, setTaskReviewList] = useState([]);\n    const [ taskDoneList, setTaskDoneList] = useState([]);\n    const [ note, setNote ] = useState(\"\");\n\n\n\n\n    const handleCreateNewTask = task => {\n        if(isEmpty(task) !== true) setToDoTaskList(taskToDoList => [...taskToDoList, {...task, id: uuid(), board: \"todo\", visibility: true}]);\n        else setNote('This list is empty');\n    }\n\n    const handleMoveTaskWithinBoard = e => {\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n        //////////////\n        if (name === 'right-todo') {\n            setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskToDoList.find(task => task.id === id), board: \"in-progress\"}));\n            setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        }\n        if (name === 'left-in-progress') {\n            setToDoTaskList(taskToDoList => taskToDoList.concat({...taskInProgressList.find(task => task.id === id), board: \"todo\"}));\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        ///////////////\n        if (name === 'right-in-progress') {\n            setTaskReviewList(taskReviewList => taskReviewList.concat({...taskInProgressList.find(task => task.id === id), board: \"review\"}));\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        if (name === 'left-review') {\n            setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskReviewList.find(task => task.id === id), board: \"in-progress\"}));\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        ///////////////\n        if (name === 'right-review') {\n            setTaskDoneList(taskDoneList => taskDoneList.concat({...taskReviewList.find(task => task.id === id), board: \"done\"}));\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        if (name === 'left-done') {\n            setTaskReviewList(taskReviewList => taskReviewList.concat({...taskDoneList.find(task => task.id === id), board: \"review\"}));\n            setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n        }\n    };\n\n    const handleDragAndDrop = (board_name, task_name, id) => {\n        let taskObj = {};\n        if (task_name === 'todo') {\n            taskObj = taskToDoList.find(task => task.id === id);\n            setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        }\n        if (task_name === 'in-progress') {\n            taskObj = taskInProgressList.find(task => task.id === id);\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        if (task_name === 'review') {\n            taskObj = taskReviewList.find(task => task.id === id);\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        if (task_name === 'done') {\n            taskObj = taskDoneList.find(task => task.id === id);\n            setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n        }\n        if (board_name === 'in-progress') setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskObj, board: \"in-progress\"}));\n        if (board_name === 'todo') setToDoTaskList(taskToDoList => [...taskToDoList].concat({...taskObj, board: \"todo\"}));\n        if (board_name === 'review') setTaskReviewList(taskReviewList => [...taskReviewList].concat({...taskObj, board: \"review\"}));\n        if (board_name === 'done') setTaskDoneList(taskDoneList => [...taskDoneList].concat({...taskObj, board: \"done\"}));\n\n    }\n\n    const handleDeleteTaskItem = e => {\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n\n        //////////////\n        if (name === 'todo') setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        if (name === 'in-progress') setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        if (name === 'review') setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        if (name === 'done') setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n    }\n\n\n    const handleShowTaskItem = e => {\n        let visible;\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n        const className = e.target.getAttribute('class').split(\" \")[0];\n        className === 'show' ? visible = true : visible = false;\n        if (name === 'todo') setToDoTaskList([...taskToDoList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'in-progress') setTaskInProgressList([...taskInProgressList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'review') setTaskReviewList([...taskReviewList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'done') setTaskDoneList([...taskDoneList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n\n    };\n\n    const handleEventProps = {\n        createList: handleCreateNewTask,\n        moveTask: handleMoveTaskWithinBoard,\n        deleteTask: handleDeleteTaskItem,\n        hideTask: handleShowTaskItem,\n        showTask: handleShowTaskItem,\n        dragTask: handleDragAndDrop\n    };\n\n    const handleStateProps = {\n        taskToDoList: taskToDoList,\n        taskInProgressList: taskInProgressList,\n        taskReviewList: taskReviewList,\n        taskDoneList: taskDoneList,\n        boardMessage: note\n    };\n\n    return <Main {...handleEventProps} {...handleStateProps} />\n\n}\n\nexport default App;\n","export default (obj) => {\r\n\r\n    // null and undefined are \"empty\"\r\n    if (obj == null) return true;\r\n\r\n    // Assume if it has a length property with a non-zero value\r\n    // that that property is correct.\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    // If it isn't an object at this point\r\n    // it is empty, but it can't be anything *but* empty\r\n    // Is it empty?  Depends on your application.\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    // Note that this doesn't handle\r\n    // toString and valueOf enumeration bugs in IE < 9\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}