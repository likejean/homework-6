{"version":3,"sources":["components/task_modal/InputForm.js","components/task_modal/DescriptionTaskInput.js","components/board_modal/ErrorMessage.js","components/task_modal/ModalPage.js","components/board_modal/OrderInput.js","components/board_modal/ModalPage.js","components/main/ButtonGroup.js","components/main/TaskItem.js","components/main/NewKanbanDashboard.js","components/main/index.js","helpers/EmptyObject.js","helpers/ValidateUserInput.js","App.js","index.js"],"names":["handleDelegateNameChange","fullname","prepend","inputs","noTag","name","value","first_name","onChange","e","target","getAttribute","type","last_name","description","descriptionInputChange","label","outline","error","color","createTask","validateInput","errors","taskTitleError","taskDescriptionError","useState","modalButtonClick","setModalButtonClick","taskTitle","setTaskTitle","taskDescription","setTaskDescription","delegateName","setDelegateName","createNewTask","setCreateNewTask","stableDispatch","useCallback","useEffect","handleToggleModal","className","onClick","isOpen","toggle","size","ErrorMessage","DescriptionTaskInput","id","InputForm","attribute","disabled","inputStatus","title","boardOrderChange","order","createBoard","boardOrderError","boardTitleError","boardTitle","setBoardTitle","boardOrder","setBoardOrder","createNewBoard","setCreateNewBoard","OrderInput","task","board","boardLength","moveTask","deleteTask","hideTask","console","log","direction","aria-hidden","index","toggleModal","setToggleModal","DescriptionModal","handleToggleDescriptionModal","draggable","onDragStart","dataTransfer","setData","onDragOver","stopPropagation","onMouseOver","document","getElementById","querySelector","innerHTML","onMouseLeave","ButtonGroup","boards","showTask","dragTask","deleteBoard","boardMessage","dropTask","preventDefault","task_id","getData","dragTaskOver","map","key","onDrop","md","tasks","length","list","visibility","TaskItem","autoFocus","style","textAlign","props","listProps","eventProps","editTask","NewKanbanDashboard","obj","hasOwnProperty","call","letterNumber","isNaN","parseInt","match","initialBoards","uuid","App","note","setNote","setBoards","inputErrors","setInputErrors","handleShowTaskItem2","visible","split","handleEventProps","isEmpty","slice","Object","assign","toLowerCase","concat","movingTask","find","filter","board_name","task_name","input","ValidateUserInput","handleStateProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.ad3897df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MDBInputGroup, MDBInput } from \"mdbreact\";\r\nexport default ( { handleDelegateNameChange, fullname } ) => {\r\n\r\n    const handleFirstNameInputChange = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n    const handleLastNameInputChange  = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n\r\n    return (\r\n        <MDBInputGroup\r\n            prepend=\"Delegated to: \"\r\n            inputs={\r\n                <>\r\n                    <MDBInput noTag name=\"first\" value={fullname.first_name} onChange={handleFirstNameInputChange} type=\"text\" />\r\n                    <MDBInput noTag name=\"last\" value={fullname.last_name} onChange={handleLastNameInputChange} type=\"text\" />\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { MDBInput, MDBContainer } from 'mdbreact';\r\n\r\nexport default ({ description, descriptionInputChange }) =>\r\n    <MDBContainer>\r\n        <MDBInput\r\n            value={description}\r\n            name='task-description'\r\n            onChange={descriptionInputChange}\r\n            type=\"textarea\"\r\n            label=\"Task Description\"\r\n            outline\r\n        />\r\n    </MDBContainer>\r\n","import React from 'react';\r\nimport { MDBContainer, MDBAlert } from 'mdbreact';\r\n\r\nexport default ({ error }) => (\r\n        <MDBContainer>\r\n            <MDBAlert color=\"danger\" >\r\n                {error}\r\n            </MDBAlert>\r\n        </MDBContainer>\r\n    );\r\n\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput} from 'mdbreact';\r\nimport InputForm from './InputForm';\r\nimport DescriptionTaskInput from \"./DescriptionTaskInput\";\r\nimport ErrorMessage from \"../board_modal/ErrorMessage\";\r\n\r\n\r\nexport default ({ createTask, validateInput, errors: { taskTitleError, taskDescriptionError } }) => {\r\n    const [modalButtonClick, setModalButtonClick] = useState(false);\r\n    const [taskTitle, setTaskTitle] = useState(\"\");\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [delegateName, setDelegateName] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\"\r\n    });\r\n    const [createNewTask, setCreateNewTask] = useState({});\r\n\r\n    const handleTaskTitleChange = e => {\r\n        const { value, name } = e.target;\r\n        validateInput(value, name);\r\n        setTaskTitle(value);\r\n    }\r\n    const handleTaskDescriptionChange = e => {\r\n        const { value, name } = e.target;\r\n        validateInput(value, name);\r\n        setTaskDescription(value);\r\n    }\r\n    const handleDelegateNameChange = (attribute, value) => {\r\n        if (attribute === \"first\") setDelegateName({...delegateName, first_name: value});\r\n        if (attribute === \"last\") setDelegateName({...delegateName, last_name: value});\r\n    }\r\n\r\n    const handleStoreTaskItem = () => {\r\n        setCreateNewTask({\r\n            ...createNewTask,\r\n            title: taskTitle,\r\n            description: taskDescription,\r\n            first_name: delegateName.first_name,\r\n            last_name: delegateName.last_name\r\n        });\r\n        setModalButtonClick(!modalButtonClick);\r\n    };\r\n\r\n    const stableDispatch = useCallback(createTask, []);\r\n\r\n    useEffect(() => {\r\n        stableDispatch(createNewTask);\r\n    }, [stableDispatch, createNewTask]);\r\n\r\n\r\n    const handleToggleModal = () => {\r\n        setTaskTitle('');\r\n        setTaskDescription('');\r\n        setDelegateName({\r\n                first_name: \"\",\r\n                last_name: \"\"\r\n            }\r\n        );\r\n        setModalButtonClick(!modalButtonClick);\r\n    }\r\n\r\n    return (\r\n        <MDBContainer className=''>\r\n            <div className='start-modal-button-wrapper row align-items-center justify-content-center'>\r\n                <MDBBtn className='start-modal-button' onClick={handleToggleModal}>CREATE TASK</MDBBtn>\r\n            </div>\r\n            <MDBModal isOpen={modalButtonClick} toggle={handleToggleModal}>\r\n                <MDBModalHeader toggle={handleToggleModal}>Task Form</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <MDBInput label=\"Enter Task Title\" name='task-title' type='text' value={taskTitle} onChange={handleTaskTitleChange} size=\"md\" />\r\n                    {taskTitleError.errors && <ErrorMessage error={taskTitleError.errors}/>}\r\n                    <DescriptionTaskInput\r\n                        id='textArea'\r\n                        description={taskDescription}\r\n                        descriptionInputChange={handleTaskDescriptionChange}\r\n                    />\r\n                    {taskDescriptionError.errors && <ErrorMessage error={taskDescriptionError.errors}/>}\r\n                    <InputForm fullname={delegateName} handleDelegateNameChange={handleDelegateNameChange}/>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn className='row' color=\"secondary\" onClick={handleToggleModal}>Close</MDBBtn>\r\n                    <MDBBtn disabled={taskTitleError.inputStatus || taskDescription.inputStatus} className='row' color=\"primary\" onClick={handleStoreTaskItem}>Create Task</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { MDBInput } from 'mdbreact';\r\nimport \"./style.css\";\r\n\r\nexport default ({ boardOrderChange, order }) => {\r\n        return (\r\n            <MDBInput label=\"Enter Board Order\" name='board-order' type=\"text\" value={order} onChange={boardOrderChange} />\r\n        );\r\n    }\r\n\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput} from 'mdbreact';\r\nimport OrderInput from \"./OrderInput\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nexport default ({ createBoard, validateInput, errors: { boardOrderError, boardTitleError } }) => {\r\n    const [modalButtonClick, setModalButtonClick] = useState(false);\r\n    const [boardTitle, setBoardTitle] = useState(\"\");\r\n    const [boardOrder, setBoardOrder] = useState(0);\r\n    const [createNewBoard, setCreateNewBoard] = useState({});\r\n\r\n    const handleStoreBoardItem = () => {\r\n        setCreateNewBoard({\r\n            ...createNewBoard,\r\n            title: boardTitle,\r\n            order: boardOrder\r\n        });\r\n        setModalButtonClick(!modalButtonClick);\r\n    };\r\n    const handleBoardTitleChange = e => {\r\n        const { value, name } = e.target;\r\n        validateInput(value, name);\r\n        setBoardTitle(e.target.value);\r\n    }\r\n\r\n    const handleBoardOrderChange = e => {\r\n        const { value, name } = e.target;\r\n        validateInput(value, name);\r\n        setBoardOrder(value);\r\n    }\r\n\r\n\r\n    const stableDispatch = useCallback(createBoard, []);\r\n\r\n    useEffect(() => {\r\n        stableDispatch(createNewBoard);\r\n    }, [stableDispatch, createNewBoard]);\r\n\r\n\r\n    const handleToggleModal = () => {\r\n        setBoardTitle('');\r\n        setBoardOrder(1);\r\n        setModalButtonClick(!modalButtonClick);\r\n    }\r\n\r\n    return (\r\n        <MDBContainer className=''>\r\n            <div className='start-modal-button-wrapper row align-items-center justify-content-center'>\r\n                <MDBBtn className='start-modal-button' onClick={handleToggleModal}>CREATE BOARD</MDBBtn>\r\n            </div>\r\n            <MDBModal isOpen={modalButtonClick} toggle={handleToggleModal}>\r\n                <MDBModalHeader toggle={handleToggleModal}>Board Form</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    <div className=\"form-group\">\r\n                        <MDBInput label=\"Enter Board Title\" name='board-title' type='text' value={boardTitle} onChange={handleBoardTitleChange} size=\"md\" />\r\n                        {boardTitleError.errors && <ErrorMessage error={boardTitleError.errors}/>}\r\n                        <OrderInput order={boardOrder} boardOrderChange={handleBoardOrderChange}/>\r\n                        {boardOrderError.errors && <ErrorMessage error={boardOrderError.errors}/>}\r\n                    </div>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn className='row' color=\"secondary\" onClick={handleToggleModal}>Close</MDBBtn>\r\n                    <MDBBtn disabled={boardOrderError.inputStatus || boardTitleError.inputStatus} className='row' color=\"primary\" onClick={handleStoreBoardItem}>Create Board</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {MDBBtn, MDBBtnGroup} from \"mdbreact\";\r\n\r\nexport default ({task: { board, id }, boardOrder, boardLength, moveTask, deleteTask, hideTask}) => {\r\n    console.log('length', boardLength)\r\n    return (\r\n        <MDBBtnGroup size=\"sm\" className=\"mb-4\">\r\n            <MDBBtn\r\n                disabled={boardOrder === 0}\r\n                className='task-button'\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    direction='left'\r\n                    order={boardOrder}\r\n                    name={`left-${board}`}\r\n                    className=\"fa fa-angle-double-left\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={hideTask} className=\"hide fas fa-eye-slash\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} className=\"hide fas fa-edit\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={deleteTask} className=\"delete fas fa-trash-alt\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn\r\n                className='task-button'\r\n                disabled={boardOrder === boardLength - 1}\r\n                // disabled={`right-${board}` === 'right-done'}\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    direction='right'\r\n                    order={boardOrder}\r\n                    name={`right-${board}`}\r\n                    className=\"fa fa-angle-double-right\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n        </MDBBtnGroup>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\r\n\r\n\r\nexport default ({task, boardLength, boardOrder, index, moveTask, deleteTask, hideTask}) => {\r\n\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n\r\n    const dragTaskStart = e => {\r\n        const target = e.target;\r\n        e.dataTransfer.setData('task', target.id);\r\n    };\r\n\r\n    const DescriptionModal = () =>\r\n        <MDBContainer>\r\n            <MDBModal isOpen={toggleModal} toggle={handleToggleDescriptionModal} size=\"fluid\">\r\n                <MDBModalHeader toggle={handleToggleDescriptionModal}>{task.title}</MDBModalHeader>\r\n                <MDBModalBody>\r\n                    {task.description}\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn color=\"secondary\" onClick={handleToggleDescriptionModal}>Close</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        </MDBContainer>\r\n\r\n    const dragTaskOver = e => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleOnMouseOver = e => {\r\n        let id = e.target.id;\r\n        document.getElementById(id).querySelector(\".task-details\").innerHTML = 'Click Here...';\r\n    }\r\n    const handleOnMouseOff = e => {\r\n        let id = e.target.id;\r\n        document.getElementById(id).querySelector(\".task-details\").innerHTML = 'Details...';\r\n    }\r\n\r\n    const handleToggleDescriptionModal = () => setToggleModal(!toggleModal)\r\n\r\n    return (\r\n        <div\r\n            draggable='true'\r\n            name={task.board}\r\n            id={index}\r\n            onDragStart={dragTaskStart}\r\n            onDragOver={dragTaskOver}\r\n            className=\"d-flex flex-column task-card\"\r\n        >\r\n            <h6 className=\"task-title\">{task.title}</h6>\r\n            <span className=\"p-2 col-example text-left task-details\"\r\n                  id={index}\r\n                  onMouseOver={handleOnMouseOver}\r\n                  onMouseLeave={handleOnMouseOff}\r\n                  onClick={handleToggleDescriptionModal}\r\n            >\r\n                <i>Details...</i>\r\n            </span>\r\n            <DescriptionModal/>\r\n            <ButtonGroup boardLength={boardLength} boardOrder={boardOrder} moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} task={task}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport TaskItem from \"./TaskItem\";\r\nimport {MDBCol, MDBContainer, MDBRow} from \"mdbreact\";\r\n\r\nexport default ({\r\n                    boards,\r\n                    moveTask,\r\n                    deleteTask,\r\n                    hideTask,\r\n                    showTask,\r\n                    dragTask,\r\n                    deleteBoard,\r\n                    boardMessage\r\n                }) =>\r\n{\r\n\r\n    const dropTask = e => {\r\n        e.preventDefault();\r\n        const task_id = e.dataTransfer.getData('task');\r\n        const task = document.getElementById(task_id);\r\n        dragTask(e.target.getAttribute('name'), task.getAttribute('name'), task_id);\r\n    };\r\n\r\n    const dragTaskOver = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const boardList = (list, order, length) => list.length\r\n        ?   list.map((task, id) => task.visibility\r\n            ?   <TaskItem boardLength={length} boardOrder={order} moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} key={id} index={task.id} task={task}/>\r\n            :   <p className='show' key={task.id}>Hidden Task... <span id={task.id} name={task.board} autoFocus onClick={showTask} className='show'>SHOW</span></p>\r\n        )\r\n        :   <p style={{ color: 'white', textAlign: 'center' }}><i>{boardMessage}</i></p>;\r\n\r\n    return (\r\n        <MDBContainer className=\"dashboard\">\r\n            <MDBRow className=\"kanban-row\">\r\n                {boards.map(board => (\r\n                    <MDBCol\r\n                        key={board.id}\r\n                        onDrop={dropTask}\r\n                        name={board.name}\r\n                        onDragOver={dragTaskOver}\r\n                        className=\"kanban-col\"\r\n                        md=\"3\"\r\n                    >\r\n                        <div className='board-header container'>\r\n                            <div className='row'>\r\n                                <h3 className=\"task-list-title col-10\">{board.title}: ({board.tasks.length})</h3>\r\n                                <div className='col-2'><i id={board.id} onClick={deleteBoard} className=\"far fa-calendar-times fa-2x\"></i></div>\r\n                            </div>\r\n                        </div>\r\n                        {boardList(board.tasks, board.order, boards.length)}\r\n                    </MDBCol>\r\n                ))\r\n                }\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n}","import React from 'react';\r\nimport TaskModalPage from '../task_modal/ModalPage';\r\nimport BoardModalPage from '../board_modal/ModalPage'\r\nimport NewKanbanDashboard from \"./NewKanbanDashboard\";\r\n\r\nexport default props => {\r\n    const listProps = {\r\n        boards: props.boards,\r\n        boardMessage: props.boardMessage,\r\n        errors: props.errors\r\n    };\r\n    const eventProps = {\r\n        createBoard: props.createBoard,\r\n        createTask: props.createTask,\r\n        moveTask: props.moveTask,\r\n        deleteTask: props.deleteTask,\r\n        deleteBoard: props.deleteBoard,\r\n        hideTask: props.hideTask,\r\n        showTask: props.showTask,\r\n        dragTask: props.dragTask,\r\n        editTask: props.editTask,\r\n        validateInput: props.validateInput\r\n    };\r\n    return (\r\n        <div>\r\n            <TaskModalPage\r\n                errors={listProps.errors}\r\n                validateInput={eventProps.validateInput}\r\n                createTask={eventProps.createTask} />\r\n            <BoardModalPage\r\n                errors={listProps.errors}\r\n                validateInput={eventProps.validateInput}\r\n                createBoard={eventProps.createBoard} />\r\n            <NewKanbanDashboard\r\n                boardMessage={listProps.boardMessage}\r\n                {...listProps}\r\n                {...eventProps}/>\r\n        </div>\r\n    )\r\n}","export default (obj) => {\r\n\r\n    // null and undefined are \"empty\"\r\n    if (obj == null) return true;\r\n\r\n    // Assume if it has a length property with a non-zero value\r\n    // that that property is correct.\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    // If it isn't an object at this point\r\n    // it is empty, but it can't be anything *but* empty\r\n    // Is it empty?  Depends on your application.\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    // Note that this doesn't handle\r\n    // toString and valueOf enumeration bugs in IE < 9\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}","export default (name, value, length) => {\r\n    const letterNumber = /^[0-9a-zA-Z]+$/;\r\n    switch (name) {\r\n        case 'board-order':\r\n            return {\r\n                errors:\r\n                    isNaN(value) || value === \"\"\r\n                        ? 'Input must be an INTEGER!'\r\n                        : parseInt(value) <= 0\r\n                        ? 'Must be greater than zero!'\r\n                        : parseInt(value) > length\r\n                            ? `Must be less or equal ${length}!`\r\n                            : '',\r\n                inputStatus:\r\n                    isNaN(value) || value === \"\" || parseInt(value) <= 0 || parseInt(value) > length\r\n            };\r\n        case 'board-title':\r\n            return {\r\n                errors:\r\n                    !value.match(letterNumber)\r\n                        ? 'Please, input alphanumeric characters only!'\r\n                        : value.length > 10\r\n                            ? 'This title is too long'\r\n                            : '',\r\n                inputStatus:\r\n                    !value.match(letterNumber) || value.length > 10\r\n            };\r\n        case 'task-title':\r\n            return {\r\n                errors:\r\n                    !value.match(letterNumber)\r\n                        ? 'Please, input alphanumeric characters only!'\r\n                        : value.length > 7\r\n                        ? 'This title is too long'\r\n                        : '',\r\n                inputStatus:\r\n                    !value.match(letterNumber) || value.length > 7\r\n            };\r\n        case 'task-description':\r\n            return {\r\n                errors:\r\n                    value.length >= 100\r\n                        ? 'Description must be less than 100 characters'\r\n                        : '',\r\n                inputStatus:\r\n                    value.length >= 100\r\n            };\r\n        default:\r\n            return {\r\n                errors : '',\r\n                inputStatus: false\r\n            }\r\n    }\r\n}\r\n","import React, {useState} from 'react';\nimport Main from './components/main';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport isEmpty from './helpers/EmptyObject';\nimport ValidateUserInput from \"./helpers/ValidateUserInput\";\n\n\nconst initialBoards = [\n    {\n        name: 'todo',\n        order: 0,\n        title: 'To-Do',\n        id: uuid(),\n        tasks: []\n    },\n    {\n        name: 'in-progress',\n        order: 1,\n        title: 'In-Progress',\n        id: uuid(),\n        tasks: []\n\n    },\n    {\n        name: 'review',\n        order: 2,\n        title: 'To-Review',\n        id: uuid(),\n        tasks: []\n\n    },\n    {\n        name: 'done',\n        order: 3,\n        title: 'Completed',\n        id: uuid(),\n        tasks: []\n    },\n    {\n        name: 'extra',\n        order: 4,\n        title: 'Extra',\n        id: uuid(),\n        tasks: []\n    }\n];\n\nfunction App() {\n\n    const [note, setNote] = useState(\"\");\n    const [boards, setBoards] = useState(initialBoards);\n    const [inputErrors, setInputErrors] = useState({\n        boardTitleError: {\n            errors: '',\n            inputStatus: false\n        },\n        taskTitleError: {\n            errors: '',\n            inputStatus: false\n        },\n        boardOrderError: {\n            errors: '',\n            inputStatus: false\n        },\n        taskDescriptionError: {\n            errors: '',\n            inputStatus: false\n        }\n    });\n\n    const handleCreateNewBoard2 = board => {\n        let index = parseInt(board.order) - 1;\n        if (isEmpty(board) !== true) {\n            setBoards(boards => [\n                ...boards.slice(0, index),\n                Object.assign({},\n                    {\n                        ...board,\n                        id: uuid(),\n                        name: board.title.toLowerCase(),\n                        tasks: []\n                    }),\n                ...boards.slice(index)\n            ]);\n            setBoards(boards => boards.map((board, id) => ({...board, order: id })));\n\n        }\n    }\n\n\n    const handleValidateUserInput2 = (input, name) => {\n        if (name === 'board-order') setInputErrors(inputErrors => ({ ...inputErrors, boardOrderError: ValidateUserInput(name, input, boards.length)} ));\n        if (name === 'board-title') setInputErrors(inputErrors => ({ ...inputErrors, boardTitleError: ValidateUserInput(name, input, boards.length)} ));\n        if (name === 'task-title') setInputErrors(inputErrors => ({ ...inputErrors, taskTitleError: ValidateUserInput(name, input, boards.length)} ));\n        if (name === 'task-description') setInputErrors(inputErrors => ({ ...inputErrors, taskDescriptionError: ValidateUserInput(name, input, boards.length)} ));\n    }\n\n    const handleEditTaskItem2 = e => {\n        console.log(e.target.id);\n    }\n\n    const handleDeleteBoard2 = e => {\n        let id = e.target.id;\n        setBoards(boards => boards.filter(board => board.id !== id));\n        setBoards(boards => boards.map((board, id) => ({...board, order: id })));\n    }\n\n\n    const handleCreateNewTask2 = task => {\n        if (isEmpty(task) !== true) setBoards(boards => boards.map(board =>\n            board.name === 'todo'\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.concat(\n                        {\n                            ...task,\n                            id: uuid(),\n                            board: \"todo\",\n                            visibility: true\n                        }\n                    )\n                }\n                :\n                board\n            )\n        )\n        else setNote('This list is empty');\n    };\n\n\n    const handleMoveTaskWithinBoard2 = e => {\n        const id = e.target.getAttribute('id');\n        const direction = e.target.getAttribute('direction');\n        const boardOrder = e.target.getAttribute('order');\n        const movingTask = boards.find(board => board.order === parseInt(boardOrder)).tasks.find(task => task.id === id);\n\n        ///remove a task....\n        setBoards(boards => boards.map(board =>\n            board.order === parseInt(boardOrder)\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.filter(task => task.id !== id)\n                }\n                :\n                board\n            )\n        );\n\n        ////Add a task......\n        setBoards(boards => boards.map(board =>\n            board.order === parseInt(boardOrder) + 1 && direction === 'right'\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.concat({...movingTask, board: board.name})\n                }\n                : board\n            )\n        );\n        setBoards(boards => boards.map(board =>\n            board.order === parseInt(boardOrder) - 1 && direction === 'left'\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.concat({...movingTask, board: board.name})\n                }\n                : board\n            )\n        );\n    };\n\n    const handleDragAndDrop2 = (board_name, task_name, id) => {\n        const dragTask = boards.find(board => board.name === task_name).tasks.find(task => task.id === id);\n\n        setBoards(boards => boards.map(board =>\n            board.name === task_name\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.filter(task => task.id !== id)\n                }\n                :\n                board\n            )\n        );\n        setBoards(boards => boards.map(board =>\n                board.name === board_name\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.concat({...dragTask, board: board.name})\n                }\n                : board\n            )\n        );\n    }\n\n    const handleDeleteTaskItem2 = e => {\n        setBoards(boards => boards.map(board =>\n                board.name === e.target.getAttribute('name')\n                    ?\n                    {\n                        ...board,\n                        tasks: board.tasks.filter(task => task.id !== e.target.id)\n                    }\n                    :\n                    board\n            )\n        );\n    };\n\n    const handleShowTaskItem2 = e => {\n        let visible;\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n        const className = e.target.getAttribute('class').split(\" \")[0];\n        className === 'show' ? visible = true : visible = false;\n\n        setBoards(boards => boards.map(board =>\n            board.name === name\n                ?\n                {\n                    ...board,\n                    tasks: board.tasks.map(task => task.id === id\n                        ?\n                        {\n                            ...task,\n                            visibility: visible\n                        }\n                        :\n                        task\n                    )\n                }\n                :\n                board\n            )\n        );\n    }\n\n    /////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////\n\n\n    const handleEventProps = {\n        createBoard: handleCreateNewBoard2,\n        createTask: handleCreateNewTask2,\n        moveTask: handleMoveTaskWithinBoard2,\n        dragTask: handleDragAndDrop2,\n        deleteTask: handleDeleteTaskItem2,\n        hideTask: handleShowTaskItem2,\n        showTask: handleShowTaskItem2,\n        editTask: handleEditTaskItem2,\n        deleteBoard: handleDeleteBoard2,\n        validateInput: handleValidateUserInput2\n    };\n\n    const handleStateProps = {\n        boards: boards,\n        boardMessage: note,\n        errors: inputErrors\n    };\n\n    return <Main {...handleEventProps} {...handleStateProps} />\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}