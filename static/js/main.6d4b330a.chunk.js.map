{"version":3,"sources":["components/modal/InputForm.js","components/modal/TitleInput.js","components/modal/DescriptionTaskInput.js","components/modal/ModalPage.js","components/main/ButtonGroup.js","components/main/TaskItem.js","components/main/KanbanDashboard.js","components/main/index.js","App.js","helpers/EmptyObject.js","index.js"],"names":["handleDelegateNameChange","fullname","prepend","inputs","noTag","name","value","first_name","onChange","e","target","getAttribute","type","last_name","titleInput","title","className","id","description","descriptionInputChange","label","outline","createList","useState","modalButtonClick","setModalButtonClick","taskTitle","setTaskTitle","taskDescription","setTaskDescription","delegateName","setDelegateName","createTask","setCreateTask","handleTaskTitleChange","stableDispatch","useCallback","useEffect","handleToggleModal","onClick","isOpen","toggle","TitleInput","DescriptionTaskInput","InputForm","attribute","color","task","board","moveTask","deleteTask","hideTask","size","disabled","aria-hidden","index","draggable","onDragStart","dataTransfer","setData","onDragOver","stopPropagation","ButtonGroup","taskToDoList","taskInProgressList","taskReviewList","taskDoneList","showTask","dragTask","boardMessage","dropTask","preventDefault","task_id","getData","document","getElementById","dragTaskOver","boardList","list","length","map","visibility","TaskItem","key","autoFocus","style","textAlign","onDrop","md","props","listProps","eventProps","ModalPage","KanbanDashboard","App","setToDoTaskList","setTaskInProgressList","setTaskReviewList","setTaskDoneList","note","setNote","handleShowTaskItem","visible","split","handleEventProps","obj","hasOwnProperty","call","isEmpty","uuid","concat","find","filter","board_name","task_name","taskObj","handleStateProps","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d4b330a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MDBInputGroup, MDBInput } from \"mdbreact\";\r\nexport default ( { handleDelegateNameChange, fullname } ) => {\r\n\r\n    const handleFirstNameInputChange = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n    const handleLastNameInputChange  = e => handleDelegateNameChange(e.target.getAttribute('name'), e.target.value);\r\n\r\n    return (\r\n        <MDBInputGroup\r\n            prepend=\"Delegated to: \"\r\n            inputs={\r\n                <>\r\n                    <MDBInput noTag name=\"first\" value={fullname.first_name} onChange={handleFirstNameInputChange} type=\"text\" />\r\n                    <MDBInput noTag name=\"last\" value={fullname.last_name} onChange={handleLastNameInputChange} type=\"text\" />\r\n                </>\r\n            }\r\n        />\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default ({ titleInput, title }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>Task Title</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={ titleInput }\r\n                value={ title }\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { MDBInput } from 'mdbreact';\r\n\r\nexport default ( { description, descriptionInputChange }) => <MDBInput\r\n    value={description}\r\n    onChange={descriptionInputChange}\r\n    type=\"textarea\"\r\n    label=\"Task Description\"\r\n    outline\r\n/>","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter} from 'mdbreact';\r\nimport InputForm from './InputForm';\r\nimport TitleInput from \"./TitleInput\";\r\nimport DescriptionTaskInput from \"./DescriptionTaskInput\";\r\n\r\n\r\nexport default ({ createList }) => {\r\n    const [modalButtonClick, setModalButtonClick] = useState(false);\r\n    const [taskTitle, setTaskTitle] = useState(\"\");\r\n    const [taskDescription, setTaskDescription] = useState(\"\");\r\n    const [delegateName, setDelegateName] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\"\r\n    });\r\n    const [createTask, setCreateTask] = useState({});\r\n\r\n    const handleTaskTitleChange = e => setTaskTitle(e.target.value);\r\n    const handleTaskDescriptionChange = e => setTaskDescription(e.target.value);\r\n    const handleDelegateNameChange = (attribute, value) => {\r\n        if (attribute === \"first\") setDelegateName({...delegateName, first_name: value});\r\n        if (attribute === \"last\") setDelegateName({...delegateName, last_name: value});\r\n    }\r\n\r\n    const handleStoreTaskItem = () => {\r\n        setCreateTask({\r\n            ...createTask,\r\n            title: taskTitle,\r\n            description: taskDescription,\r\n            first_name: delegateName.first_name,\r\n            last_name: delegateName.last_name\r\n        });\r\n        setModalButtonClick(!modalButtonClick);\r\n    };\r\n\r\n    const stableDispatch = useCallback(createList, []);\r\n    useEffect(() => {\r\n        stableDispatch(createTask);\r\n    },[stableDispatch, createTask]);\r\n\r\n\r\n    const handleToggleModal = () => setModalButtonClick(!modalButtonClick);\r\n\r\nreturn (\r\n    <MDBContainer className=''>\r\n        <div className='start-modal-button-wrapper row align-items-center justify-content-center' >\r\n            <MDBBtn className='start-modal-button' onClick={handleToggleModal}>CREATE TASK</MDBBtn>\r\n        </div>\r\n        <MDBModal isOpen={modalButtonClick} toggle={handleToggleModal}>\r\n            <MDBModalHeader toggle={handleToggleModal}>Task Form</MDBModalHeader>\r\n            <MDBModalBody>\r\n                <TitleInput titleInput={handleTaskTitleChange} title={taskTitle} onChange={handleTaskTitleChange}/>\r\n                <DescriptionTaskInput\r\n                    description={taskDescription}\r\n                    descriptionInputChange={handleTaskDescriptionChange}\r\n                />\r\n                <InputForm fullname={delegateName} handleDelegateNameChange={handleDelegateNameChange}/>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n                <MDBBtn className='row' color=\"secondary\" onClick={handleToggleModal}>Close</MDBBtn>\r\n                <MDBBtn className='row' color=\"primary\" onClick={handleStoreTaskItem}>Create Task</MDBBtn>\r\n            </MDBModalFooter>\r\n        </MDBModal>\r\n    </MDBContainer>\r\n);\r\n}\r\n","import React from 'react';\r\nimport {MDBBtn, MDBBtnGroup} from \"mdbreact\";\r\n\r\nexport default ({task: {board, id}, moveTask, deleteTask, hideTask}) => {\r\n    return (\r\n        <MDBBtnGroup size=\"sm\" className=\"mb-4\">\r\n            <MDBBtn\r\n                disabled={`left-${board}` === 'left-todo'}\r\n                className='task-button'\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    name={`left-${board}`}\r\n                    className=\"fa fa-angle-double-left\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={hideTask} className=\"hide fas fa-eye-slash\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn className='task-button' color=\"pink\">\r\n                <span id={id} name={board} onClick={deleteTask} className=\"delete fas fa-trash-alt\" aria-hidden=\"true\"/>\r\n            </MDBBtn>\r\n            <MDBBtn\r\n                className='task-button'\r\n                disabled={`right-${board}` === 'right-done'}\r\n                color=\"danger\"\r\n            >\r\n                <span\r\n                    id={id}\r\n                    onClick={moveTask}\r\n                    name={`right-${board}`}\r\n                    className=\"fa fa-angle-double-right\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                </span>\r\n            </MDBBtn>\r\n        </MDBBtnGroup>\r\n    )\r\n}","import React from 'react';\r\nimport ButtonGroup from \"./ButtonGroup\";\r\n\r\n\r\nexport default ({ task, index, moveTask, deleteTask, hideTask }) => {\r\n    const dragTaskStart = e => {\r\n        const target = e.target;\r\n        e.dataTransfer.setData('task', target.id);\r\n        // setTimeout(() => {\r\n        //     target.style.display = \"none\"\r\n        // }, 0);\r\n    };\r\n\r\n    const dragTaskOver = e => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n\r\n    return (\r\n        <div\r\n             draggable='true'\r\n             name={task.board}\r\n             id={index}\r\n             onDragStart={dragTaskStart}\r\n             onDragOver={dragTaskOver}\r\n             className=\"d-flex flex-column task-card\"\r\n        >\r\n            <h6 className=\"task-title\">{task.title}</h6>\r\n            <div className=\"p-2 col-example text-left\">{task.description}</div>\r\n            <ButtonGroup moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} task={task}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nexport default ({ taskToDoList,\r\n                    taskInProgressList,\r\n                    taskReviewList,\r\n                    taskDoneList,\r\n                    moveTask,\r\n                    deleteTask,\r\n                    hideTask,\r\n                    showTask,\r\n                    dragTask,\r\n                    boardMessage\r\n                }) =>\r\n{\r\n\r\n    const dropTask = e => {\r\n        e.preventDefault();\r\n        const task_id = e.dataTransfer.getData('task');\r\n        const task = document.getElementById(task_id);\r\n        dragTask(e.target.getAttribute('name'), task.getAttribute('name'), task_id);\r\n    };\r\n\r\n\r\n    const dragTaskOver = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n\r\n    const boardList = list => list.length\r\n        ?   list.map((task, id) => task.visibility\r\n            ?   <TaskItem moveTask={moveTask} deleteTask={deleteTask} hideTask={hideTask} key={id} index={task.id} task={task}/>\r\n            :   <p className='show' key={task.id}>Hidden Task... <span id={task.id} name={task.board} autoFocus onClick={showTask} className='show'>SHOW</span></p>\r\n        )\r\n        :   <p style={{ color: 'white', textAlign: 'center' }}><i>{boardMessage}</i></p>;\r\n\r\n    return (\r\n        <MDBContainer className=\"dashboard\">\r\n            <MDBRow className=\"kanban-row\">\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='todo'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">To-Do: ({taskToDoList.length})</h3>\r\n                    {boardList(taskToDoList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='in-progress'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">In-Progress: ({taskInProgressList.length})</h3>\r\n                    {boardList(taskInProgressList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='review'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">To-Review: ({taskReviewList.length})</h3>\r\n                    {boardList(taskReviewList)}\r\n                </MDBCol>\r\n                <MDBCol\r\n                    onDrop={dropTask}\r\n                    name='done'\r\n                    onDragOver={dragTaskOver}\r\n                    className=\"kanban-col\"\r\n                    md=\"3\"\r\n                >\r\n                    <h3 className=\"task-list-title\">Done: ({taskDoneList.length})</h3>\r\n                    {boardList(taskDoneList)}\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n}","import React from 'react';\r\nimport ModalPage from '../modal/ModalPage';\r\nimport KanbanDashboard from \"./KanbanDashboard\";\r\n\r\nexport default props => {\r\n    const listProps = {\r\n        taskToDoList: props.taskToDoList,\r\n        taskInProgressList: props.taskInProgressList,\r\n        taskReviewList: props.taskReviewList,\r\n        taskDoneList: props.taskDoneList\r\n    };\r\n    const eventProps = {\r\n        moveTask: props.moveTask,\r\n        deleteTask: props.deleteTask,\r\n        hideTask: props.hideTask,\r\n        showTask: props.showTask,\r\n        dragTask: props.dragTask\r\n    };\r\n    return (\r\n        <div>\r\n            <ModalPage createList={props.createList} />\r\n            <KanbanDashboard\r\n                boardMessage={props.boardMessage}\r\n                {...listProps}\r\n                {...eventProps}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport Main from './components/main';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport uuid from 'react-uuid';\nimport './App.css';\nimport isEmpty from './helpers/EmptyObject';\n\n\nfunction App() {\n\n    const [ taskToDoList, setToDoTaskList ] = useState([]);\n    const [ taskInProgressList, setTaskInProgressList ] = useState([]);\n    const [ taskReviewList, setTaskReviewList] = useState([]);\n    const [ taskDoneList, setTaskDoneList] = useState([]);\n    const [ note, setNote ] = useState(\"\");\n\n\n\n\n    const handleCreateNewTask = task => {\n        if(isEmpty(task) !== true) setToDoTaskList(taskToDoList => [...taskToDoList, {...task, id: uuid(), board: \"todo\", visibility: true}]);\n        else setNote('This list is empty');\n    }\n\n    const handleMoveTaskWithinBoard = e => {\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n        //////////////\n        if (name === 'right-todo') {\n            setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskToDoList.find(task => task.id === id), board: \"in-progress\"}));\n            setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        }\n        if (name === 'left-in-progress') {\n            setToDoTaskList(taskToDoList => taskToDoList.concat({...taskInProgressList.find(task => task.id === id), board: \"todo\"}));\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        ///////////////\n        if (name === 'right-in-progress') {\n            setTaskReviewList(taskReviewList => taskReviewList.concat({...taskInProgressList.find(task => task.id === id), board: \"review\"}));\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        if (name === 'left-review') {\n            setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskReviewList.find(task => task.id === id), board: \"in-progress\"}));\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        ///////////////\n        if (name === 'right-review') {\n            setTaskDoneList(taskDoneList => taskDoneList.concat({...taskReviewList.find(task => task.id === id), board: \"done\"}));\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        if (name === 'left-done') {\n            setTaskReviewList(taskReviewList => taskReviewList.concat({...taskDoneList.find(task => task.id === id), board: \"review\"}));\n            setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n        }\n    };\n\n    const handleDragAndDrop = (board_name, task_name, id) => {\n        let taskObj = {};\n        if (task_name === 'todo') {\n            taskObj = taskToDoList.find(task => task.id === id);\n            setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        }\n        if (task_name === 'in-progress') {\n            taskObj = taskInProgressList.find(task => task.id === id);\n            setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        }\n        if (task_name === 'review') {\n            taskObj = taskReviewList.find(task => task.id === id);\n            setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        }\n        if (task_name === 'done') {\n            taskObj = taskDoneList.find(task => task.id === id);\n            setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n        }\n        if (board_name === 'in-progress') setTaskInProgressList(taskInProgressList => taskInProgressList.concat({...taskObj, board: \"in-progress\"}));\n        if (board_name === 'todo') setToDoTaskList(taskToDoList => [...taskToDoList].concat({...taskObj, board: \"todo\"}));\n        if (board_name === 'review') setTaskReviewList(taskReviewList => [...taskReviewList].concat({...taskObj, board: \"review\"}));\n        if (board_name === 'done') setTaskDoneList(taskDoneList => [...taskDoneList].concat({...taskObj, board: \"done\"}));\n\n    }\n\n    const handleDeleteTaskItem = e => {\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n\n        //////////////\n        if (name === 'todo') setToDoTaskList([...taskToDoList].filter(task => task.id !== id));\n        if (name === 'in-progress') setTaskInProgressList([...taskInProgressList].filter(task => task.id !== id));\n        if (name === 'review') setTaskReviewList([...taskReviewList].filter(task => task.id !== id));\n        if (name === 'done') setTaskDoneList([...taskDoneList].filter(task => task.id !== id));\n    }\n\n\n    const handleShowTaskItem = e => {\n        let visible;\n        const id = e.target.getAttribute('id');\n        const name = e.target.getAttribute('name');\n        const className = e.target.getAttribute('class').split(\" \")[0];\n        className === 'show' ? visible = true : visible = false;\n        if (name === 'todo') setToDoTaskList([...taskToDoList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'in-progress') setTaskInProgressList([...taskInProgressList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'review') setTaskReviewList([...taskReviewList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n        if (name === 'done') setTaskDoneList([...taskDoneList].map(task => task.id === id ? { ...task, visibility: visible } : task));\n\n    };\n\n    const handleEventProps = {\n        createList: handleCreateNewTask,\n        moveTask: handleMoveTaskWithinBoard,\n        deleteTask: handleDeleteTaskItem,\n        hideTask: handleShowTaskItem,\n        showTask: handleShowTaskItem,\n        dragTask: handleDragAndDrop\n    };\n\n    const handleStateProps = {\n        taskToDoList: taskToDoList,\n        taskInProgressList: taskInProgressList,\n        taskReviewList: taskReviewList,\n        taskDoneList: taskDoneList,\n        boardMessage: note\n    };\n\n    return <Main {...handleEventProps} {...handleStateProps} />\n\n}\n\nexport default App;\n","export default (obj) => {\r\n\r\n    // null and undefined are \"empty\"\r\n    if (obj == null) return true;\r\n\r\n    // Assume if it has a length property with a non-zero value\r\n    // that that property is correct.\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    // If it isn't an object at this point\r\n    // it is empty, but it can't be anything *but* empty\r\n    // Is it empty?  Depends on your application.\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    // Note that this doesn't handle\r\n    // toString and valueOf enumeration bugs in IE < 9\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}